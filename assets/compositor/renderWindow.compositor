compositor_node_shadow default_simpleShadowNode
{
    technique focused
    texture focusedTex 4096 4096 PFG_D32_FLOAT
    shadow_map 0 focusedTex light 0
    //Render shadow map "0"
    shadow_map_target_type directional spot
    {
        shadow_map 0
        {
            pass render_scene
            {
                load
                {
                    all clear
                    clear_colour 1 1 1 1
                }
                store
                {
                    all store_or_resolve
                }

                rq_first 10
                rq_last 40
            }
        }
    }
}
compositor_node renderMainGameplayNode
{
    in 0 renderTexture

    //Note: These width and height values will be changed later by code to match the device screen size
    texture sceneRenderDecorations    1920 1080 PFG_RGBA32_FLOAT depth_pool 2
    texture finalSceneRender          1920 1080 PFG_RGBA32_FLOAT depth_pool 2
    texture windTexture               1920 1080 PFG_R32_FLOAT

    target finalSceneRender
    {
        //Render invisible terrain
        pass render_scene
        {
            load
            {
                all clear
                clear_colour 0.1 0.1 1 1
            }
            store
            {
                all store_or_resolve
            }

            rq_first 41
            rq_last 42

            shadows default_simpleShadowNode
            camera explorationCamera

            identifier 11
        }
        pass render_scene
        {
            rq_first 15
            rq_last 18

            camera explorationCamera
            shadows default_simpleShadowNode
        }
        //Ensure particles are rendered
        pass render_scene
        {
            rq_first 80
            camera explorationCamera
        }
        //Render discovered terrain
        pass render_scene
        {

			load { all dont_care }
			store
			{
				colour	dont_care
				depth	store
				stencil	dont_care
			}

            camera explorationCamera
            shadows default_simpleShadowNode

            rq_first 10
            rq_last 15
        }
        //Render water
        pass render_scene
        {
            rq_first 18
            rq_last 19

            camera explorationCamera
            shadows default_simpleShadowNode
        }
        //Render effects without lines
        pass render_scene
        {
            rq_first 16
            rq_last 17
            camera explorationCamera
        }

        //Render the sky
        pass render_quad
        {
            material Postprocess/FillColour
        }
    }

    //Render just decorations (trees, houses, enemies) for the line drawing algorithm
    target sceneRenderDecorations
    {
        pass render_scene
        {
			load {
                colour clear
            }
			store
			{
				colour	store
				depth	dont_care
				stencil	dont_care
			}

            overlays    off

            identifier 12
            camera explorationCamera

            rq_first 15
            rq_last 16
        }
        //Render particles
        pass render_scene
        {
            rq_first 80

            camera explorationCamera
            identifier 12
        }
    }

    target windTexture
    {
        pass render_scene
        {
            load
            {
                all clear
                clear_colour 0 0 0 0
            }
            store
            {
                all store_or_resolve
            }

            rq_first 40
            rq_last 41
            camera explorationCamera

            identifier 13
        }
    }

    target renderTexture
    {
        pass clear
        {

        }
        pass render_quad
        {
            material Postprocess/OutlineDraw
            input 0 finalSceneRender
            input 1 sceneRenderDecorations
            input 2 windTexture
        }
    }

    out 0 renderTexture
}



compositor_node clearRenderWindowNode
{
    in 0 renderWindowTexture

    target renderWindowTexture
    {
        pass clear
        {
            colour_value 0 0 0 0
        }
    }

    out 0 renderWindowTexture
}

compositor_node gameplayEffectsTexture
{
    texture renderTexture target_width target_height PFG_RGBA32_FLOAT

    out 0 renderTexture
}

compositor_node renderGameplayEffects
{
    in 0 renderTexture
    in 1 renderWindowTexture


    target renderWindowTexture
    {
        pass render_quad
        {
            material Postprocess/GameplayEffects

            input 0 renderTexture
        }
    }

    out 0 renderWindowTexture
}

compositor_node renderWindowNode
{
    in 0 renderWindowTexture
    in 1 otherTex1
    in 2 otherTex2

    target renderWindowTexture
    {
        pass custom colibri_gui
        {

            expose otherTex1
            expose otherTex2

            load
            {
                depth clear
                stencil clear
            }
            store
            {
                all store_or_resolve
            }

            // !! Important !!
            //skip_load_store_semantics false

            profiling_id "Colibri GUI"
        }
        //Render the foreground effects
        pass render_scene
        {
            load{
                depth clear
                stencil clear
            }
            store{
                all store_or_resolve
            }

            rq_first 65
            rq_last 66

            camera compositor/foregroundEffectCamera

            identifier 10

            profiling_id "Foreground Effects"
        }
    }
}

workspace renderWindowWorkspaceGameplayTexture
{
    connect_external 0 renderMainGameplayNode 0
}

workspace renderWindowWorkspaceGameplay
{
    connect_external 0 renderMainGameplayNode 0
    connect renderMainGameplayNode 0 renderWindowNode 0

    //connect_external 0 renderWindowNode 0
    connect_external 1 renderWindowNode 1
    connect_external 2 renderWindowNode 2
}

workspace renderWindowWorkspaceGameplayWithEffects
{
    connect gameplayEffectsTexture 0 renderMainGameplayNode 0
    connect renderMainGameplayNode 0 renderGameplayEffects 0
    connect renderGameplayEffects 0 renderWindowNode 0

    connect_external 0 renderGameplayEffects 1
    connect_external 1 renderWindowNode 1
    connect_external 2 renderWindowNode 2
}

workspace renderWindowWorkspace
{
    connect_external 0 clearRenderWindowNode 0
    connect clearRenderWindowNode 0 renderWindowNode 0

    //connect_external 0 renderWindowNode 0
    connect_external 1 renderWindowNode 1
    connect_external 2 renderWindowNode 2
}