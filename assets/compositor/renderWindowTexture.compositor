
compositor_node renderTexture20Node
{
    in 0 renderTexture
    target renderTexture
    {
        pass clear
        {
            colour_value 0.1 0.1 0.1 1
        }
        pass render_scene
        {
            rq_first 20
            rq_last 21
        }
    }
}

compositor_node renderTexture25Node
{
    in 0 renderTexture
    target renderTexture
    {
        pass clear
        {
            colour_value 0.1 0.1 0.1 1
        }
        pass render_scene
        {
            rq_first 25
            rq_last 26
        }
    }
}

compositor_node renderTexture60_65Node
{
    in 0 renderTexture
    target renderTexture
    {
        pass clear
        {
            colour_value 0 0 0 0
        }
        pass render_scene
        {
            rq_first 60
            rq_last 65
        }
    }
}
compositor_node renderTexture65_70Node
{
    in 0 renderTexture
    target renderTexture
    {
        pass clear
        {
            colour_value 0 0 0 0
        }
        pass render_scene
        {
            rq_first 65
            rq_last 70
        }
    }
}

//TODO figure out the correct shadows
/*
compositor_node_shadow SR3_Shadows
{
	technique pssm

	//**  shadows par
	// texture atlas 3072 2048 PFG_D32_FLOAT  // medium 2k
	// texture atlas 6144 4096 PFG_D32_FLOAT  // high 4k
	texture atlas 12288 8192 PFG_D32_FLOAT  // ultra high 8k

	num_splits		3
	pssm_lambda		0.95
	shadow_map 0 atlas uv 0.000000000000000 0.0 0.666666666666667 1.0 light 0 split 0
	shadow_map 1 atlas uv 0.666666666666667 0.0 0.333333333333333 0.5 light 0 split 1
	shadow_map 2 atlas uv 0.666666666666667 0.5 0.333333333333333 0.5 light 0 split 2

	target atlas
	{
		pass clear
		{
			colour_value 1 1 1 1
			identifier	77000
		}
	}

	shadow_map_target_type directional
	{
		shadow_map 0 1 2
		{
			pass render_scene
			{
				profiling_id "Shadows ed prv"
				identifier	77077

				rq_last		219
			}
		}
	}
}

compositor_node_shadow default_simpleShadowNode
{
    technique pssm

    texture pssm0 2048 2048 PFG_D32_FLOAT
    texture pssm1 1024 1024 PFG_D32_FLOAT
    texture pssm2 1024 1024 PFG_D32_FLOAT

    num_splits      3
    pssm_lambda     0.95
    //Render 1st closest light, splits 0 1 & 2
    shadow_map 0 pssm0 light 0 split 0
    shadow_map 1 pssm1 light 0 split 1
    shadow_map 2 pssm2 light 0 split 2

    shadow_map_target_type directional
    {
        //Render shadow maps 0, 1 and 2.
        //Can only be used by directional lights.
        shadow_map 0 1 2
        {
            pass clear
            {
                colour_value 1 1 1 1
            }
            pass render_scene
            {
            }
        }
    }
}
*/
compositor_node_shadow default_simpleShadowNode
{
    technique focused
    texture focusedTex 4096 4096 PFG_D32_FLOAT
    shadow_map 0 focusedTex light 0
    //Render shadow map "0"
    shadow_map_target_type directional spot
    {
        shadow_map 0
        {
            pass clear { colour_value 1 1 1 1 }
            pass render_scene
            {
            }
        }
    }
}
compositor_node renderTexture30Node
{
    in 0 renderTexture

	texture rt0				target_width target_height PFG_RGBA8_UNORM_SRGB
	texture depthTexture	target_width target_height PFG_D32_FLOAT
    texture sceneRender     target_width target_height PFG_RGBA32_FLOAT

	rtv rt0
	{
		depth_stencil depthTexture
	}

	texture depthTextureCopy target_width target_height PFG_D32_FLOAT

    target rt0
	{
		pass render_scene
		{
			load
			{
				all				clear
				clear_colour	0.2 0.4 0.6 1
			}
			overlays	off

            rq_first 25
            rq_last 31
		}
	}

    target sceneRender
    {
        pass render_scene
        {
            load
            {
                all clear
                clear_colour 0.5 0.89 1 1
            }
            store
            {
                all store_or_resolve
            }

            rq_first 0
            rq_last 31

            shadows default_simpleShadowNode
        }
    }

    target renderTexture
    {
        pass clear
        {

        }
        pass render_quad
        {
            material Postprocess/OutlineDraw
            input 0 sceneRender
            input 1 depthTexture
        }
    }
}

compositor_node renderTexture50_60Node
{
    in 0 renderTexture
    target renderTexture
    {
        pass clear
        {
            colour_value 0.1 0.1 0.1 0.5
        }
        pass render_scene
        {
            rq_first 50
            rq_last 61
        }
    }
}

compositor_node renderWindowNode
{
    in 0 renderWindowTexture
    in 1 otherTex1
    in 2 otherTex2
    in 3 otherTex3
    in 4 otherTex4
    in 5 otherTex5

    target renderWindowTexture
    {
        pass custom colibri_gui
        {

            expose otherTex1
            expose otherTex2
            expose otherTex3
            expose otherTex4
            expose otherTex5

            load
            {
                all clear
                clear_colour 0 0 0 0
            }
            store
            {
                all store_or_resolve
            }

            // !! Important !!
            //skip_load_store_semantics false

            profiling_id "Colibri GUI"
        }
    }
}

workspace renderTexture20Workspace
{
    connect_output renderTexture20Node 0
}
workspace renderTexture25Workspace
{
    connect_output renderTexture25Node 0
}
workspace renderTexture30Workspace
{
    connect_output renderTexture30Node 0
}
workspace renderTexture50_60Workspace
{
    connect_output renderTexture50_60Node 0
}
workspace renderTexture60_65Workspace
{
    connect_output renderTexture60_65Node 0
}
workspace renderTexture65_70Workspace
{
    connect_output renderTexture65_70Node 0
}

workspace renderWindowWorkspace
{
    connect_output renderWindowNode 0
    connect_external 1 renderWindowNode 1
    connect_external 2 renderWindowNode 2
    connect_external 3 renderWindowNode 3
    connect_external 4 renderWindowNode 4
    connect_external 5 renderWindowNode 5
}