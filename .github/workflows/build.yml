name: Build Resources

on:
  push:
    branches: 'master'

jobs:
  buildDockerContainer:
    runs-on: ubuntu-20.04
    if: false

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: asset-builder-image-voxel

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: util
          push: true
          tags: ghcr.io/othermythos/${{env.IMAGE_NAME}}:latest
          labels: ${{ steps.meta.outputs.labels }}


  build:
    runs-on: ubuntu-20.04
    needs: buildDockerContainer
    if: ${{ always() }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Build
        run: |
          ./resBuild.sh
          mkdir /tmp/distribution
          cp -r build /tmp/distribution
          cp -r avSetup.cfg /tmp/distribution
          cp -r OgreResources.cfg /tmp/distribution
          cp -r src /tmp/distribution
          echo "const GIT_HASH = \"${{ steps.vars.outputs.sha_short }}\"" >> src/Versions.nut
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: distribution.zip
          path: /tmp/distribution

  buildWindows:
    runs-on: windows-2019
    needs: build

    steps:
      - name: Clone Build
        uses: dawidd6/action-download-artifact@v3
        with:
          name: avEngineWindows.zip
          repo: OtherMythos/avEngine
          workflow: buildWindows.yml
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: distribution.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: buildWindows-${{ steps.vars.outputs.sha_short }}.zip
          path: ${{ github.workspace }}