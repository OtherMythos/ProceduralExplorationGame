name: Build Resources

on:
  push:
    branches:  'master'

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Build
        run: |
          git clone https://gitlab.com/edherbert/avtools /tmp/avtools
          cd /tmp/avtools
          docker build -t asset-builder-image -f Dockerfile .
          cd ${{ github.workspace }}
          ./resBuild.sh
          mkdir /tmp/distribution
          cp -r build /tmp/distribution
          cp -r avSetup.cfg /tmp/distribution
          cp -r OgreResources.cfg /tmp/distribution
          cp -r src /tmp/distribution
          echo "const GIT_HASH = \"${{ steps.vars.outputs.sha_short }}\"" >> src/Versions.nut
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: distribution.zip
          path: /tmp/distribution

  buildWindows:
    runs-on: windows-2019
    needs: build

    steps:
      - name: Clone Build
        uses: dawidd6/action-download-artifact@v3
        with:
          name: avEngineWindows.zip
          repo: OtherMythos/avEngine
          workflow: buildWindows.yml
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: distribution.zip
      - name: Assemble Deployable
        run: |
          ls
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: buildWindows-${{ steps.vars.outputs.sha_short }}.zip
          path: ${{ github.workspace }}